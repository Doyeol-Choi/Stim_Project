# tomcat
server.port=8080
server.compression.enabled=true

# datasource (Oracle cloud)
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@stimdb_high?TNS_ADMIN=/var/lib/tomcat9/webapps/wallet_stim/
spring.datasource.username=admin
spring.datasource.password=StimProject4860

#thymeleaf auto refresh		thymeleaf 변경시 오토 refresh
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


# mybatis mapping
# mapper.xml		.xml Mapping 시 resultType에 풀패키지명 대신 간략화 하는 설정
mybatis.type-aliases-package:com.stim.model
 
# mapper.xml location		mapper.xml 파일의 경로를 설정해주는 부분
mybatis.mapper-locations: mapper/**/*.xml

# security
spring.security.user.name = stim
spring.security.user.password = 1234

# Google
spring.security.oauth2.client.registration.google.client-id = 889413635770-vg7hj45aj5dl6pki2ldtsi88prlggeu2.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret = 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
spring.security.oauth2.client.registration.google.scope = profile, email

# naver
spring.security.oauth2.client.registration.naver.client-id = R71T5HlKXNz31917p7Co
spring.security.oauth2.client.registration.naver.client-secret = N5pP7mScTB
spring.security.oauth2.client.registration.naver.scope = name, email
spring.security.oauth2.client.registration.naver.client-name = Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri = http://152.67.216.237:8080/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri = https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri = https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri = https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute = response

#Kakao
spring.security.oauth2.client.registration.kakao.client-id = 579d6534bef74293170213ff02e70490
spring.security.oauth2.client.registration.kakao.client-secret = fqN3kEcWnn3edLXKqM8cWe0gv8Bpy0le
spring.security.oauth2.client.registration.kakao.scope = profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.client-name = Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri = http://152.67.216.237:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method = POST

spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id

#upload
spring.servlet.multipart.max-file-size = 10MB

#jpa
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=oracle
