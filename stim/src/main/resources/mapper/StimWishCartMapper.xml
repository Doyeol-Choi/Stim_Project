<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.stim.model.mapper.StimWishCartMapper">
 	
 	<resultMap type="com.stim.vo.WishVO" id="wishMap">
 		<result column="GAME_FINALPRICE" property="game_finalPrice"/>
 	</resultMap>
 	<resultMap type="com.stim.vo.CartVO" id="cartMap">
 		<result column="GAME_FINALPRICE" property="game_finalPrice"/>
 	</resultMap>
 	
 	
 	<!-- 찜목록 리스트 -->
    <select id="SelectWishGame" resultMap="wishMap" parameterType="int">
        SELECT wish_code,w.user_code AS user_code, w.game_code AS game_code, ga.game_name AS game_name, game_price,
		ge.genre_1 AS genre_1, ge.genre_2 AS genre_2, ge.genre_3 AS genre_3, ga.game_releaseDate AS game_releaseDate, 
		ga.game_picture AS game_picture,
			CASE
		        WHEN game_discount IS NULL THEN game_price        
		        ELSE game_price*(1-(game_discount/100))
		    END as "GAME_FINALPRICE"
		FROM wish_tbl w, game_tbl ga, genre_tbl ge 
		WHERE w.user_code = #{user_code}
		AND w.game_code = ge.game_code
		AND w.game_code = ga.game_code
    </select>
    <!-- 장바구니 리스트 -->
 	<select id="SelectCartGame" resultMap="cartMap" parameterType="int">
       	SELECT cart_code, c.user_code AS user_code, c.game_code AS game_code, ga.game_name AS game_name, game_price,
		ge.genre_1 AS genre_1, ge.genre_2 AS genre_2, ge.genre_3 AS genre_3, ga.game_releaseDate AS game_releaseDate, 
		ga.game_picture AS game_picture,
			CASE
		        WHEN game_discount IS NULL THEN game_price        
		        ELSE game_price*(1-(game_discount/100))
		    END as "GAME_FINALPRICE"
		FROM cart_tbl c, game_tbl ga, genre_tbl ge 
		WHERE c.user_code = #{user_code}
		AND c.game_code = ge.game_code
		AND c.game_code = ga.game_code
    </select>
    
    <!-- 게임 상세보기, 찜목록에서 장바구니에 넣기 -->
    <insert id="InsertCartGame" parameterType="int">
    	INSERT INTO cart_tbl (cart_code, user_code, game_code)
    	SELECT cart_code_seq.nextval, #{user_code},#{game_code} FROM dual
    	WHERE NOT EXISTS (SELECT cart_code FROM cart_tbl WHERE game_code = #{game_code})
    </insert>
    
    <!-- 찜목록 삭제 -->
    <delete id="DeleteWishGame" parameterType="int">
    	DELETE wish_tbl WHERE wish_code = #{wish_code}
    </delete>
    
    <!-- 장바구니 삭제 -->
    <delete id="DeleteCartGame" parameterType="int">
    	DELETE cart_tbl WHERE cart_code = #{cart_code}
    </delete>
    
    <!-- 장바구니 총금액 -->
    <select id="TotalPriceGame" resultType="Integer" parameterType="int">
    	SELECT 
		    SUM(CASE
		        WHEN game_discount IS NULL THEN game_price        
		        ELSE game_price*(1-(game_discount/100))
		    END) as "GAME_FINALPRICE"
		FROM cart_tbl c, game_tbl ga
		WHERE c.user_code = #{user_code}
		and c.game_code = ga.game_code
    </select>
    
    <!-- 결제 완료후 보유게임테이블에 넣기 -->
    <insert id="InsertMyGame" parameterType="int">
    	INSERT INTO mygame_tbl VALUES
		(mygame_code_seq.nextval, #{user_code}, #{game_code})
    </insert>
    
    <!-- 결제 완료후 장바구니 목록 삭제 -->
    <delete id="DeleteCartAllGame" parameterType="int">
    	DELETE cart_tbl WHERE user_code = #{user_code}
    	AND game_code = #{game_code}
    </delete>

    <!-- 결제 완료후 찜목록 삭제 -->
    <delete id="DeleteWishAllGame" parameterType="int">
    	DELETE wish_tbl WHERE user_code = #{user_code}
    	AND game_code = #{game_code}
    </delete>
    
    <!-- 장바구니 게임코드 가져오기 -->
    <select id="SelectCartGameCode" resultType="Integer" parameterType="Integer">
    	SELECT game_code FROM cart_tbl
    	WHERE user_code = #{user_code}
    </select>
    
    <!-- 찜목록 게임코드 가져오기 -->
    <select id="SelectWishGameCode" resultType="Integer" parameterType="Integer">
    	SELECT game_code FROM wish_tbl
    	WHERE user_code = #{user_code}
    </select>
    <!-- 보유게임에서 게임코드 가져오기 -->
    <select id="SelectMyGameCode" resultType="Integer" parameterType="Integer">
    	SELECT game_code FROM mygame_tbl
    	WHERE user_code = #{user_code}
    </select>
    
    <!-- 게임 상세보기에서 찜목록에 넣기 -->
    <insert id="InsertWishGame" parameterType="int">
    	INSERT INTO wish_tbl (wish_code, user_code, game_code)
    	SELECT wish_code_seq.nextval, #{user_code},#{game_code} FROM dual
    	WHERE NOT EXISTS (SELECT wish_code FROM wish_tbl WHERE game_code = #{game_code})
    </insert>
</mapper>
